{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","onSetMovies","useState","movieTitle","setMovieTitle","setMovie","hasNotFoundError","setNotFoundError","sameIdCheck","some","film","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","title","fetch","then","response","ok","json","Promise","reject","foundMovie","disabled","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f99d761.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ninterface Props {\n  movies: Movie[];\n  onSetMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n}\n\nexport const FindMovie: React.FC<Props> = ({ movies, onSetMovies }) => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [hasNotFoundError, setNotFoundError] = useState(false);\n  const sameIdCheck = movies.some(film => film.imdbID === movie?.imdbID);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n  };\n\n  const handleInput = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n    setMovieTitle(target.value);\n    setNotFoundError(false);\n  };\n\n  const AddMovie = () => {\n    if (movie) {\n      onSetMovies([...movies, movie]);\n      setMovieTitle('');\n      setMovie(null);\n    }\n  };\n\n  const findMovie = () => {\n    getMovie(movieTitle)\n      .then(foundMovie => (foundMovie.Title\n        ? setMovie(foundMovie)\n        : setNotFoundError(true)));\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': hasNotFoundError,\n              }, {\n                'is-success': movie,\n              }, {\n                'is-warning': sameIdCheck,\n              })}\n              value={movieTitle}\n              onChange={handleInput}\n            />\n          </div>\n\n          {(hasNotFoundError) && (\n            <p className={classNames('help is-danger')}>\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n          {sameIdCheck && (\n            <p className={classNames('help is-danger')}>\n              You&apos;ve allready added this movie\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              data-cy=\"find\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className={classNames('button', {\n                'is-primary': movie,\n              }, {\n                'is-warning': sameIdCheck,\n              })}\n              data-cy=\"add\"\n              onClick={AddMovie}\n              disabled={movie === null || sameIdCheck}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","export function getMovie(title: string): Promise<Movie> {\n  return fetch(`https://www.omdbapi.com/?apikey=c48d1bf&t=${title}`)\n    .then(response => (response.ok\n      ? response.json()\n      : Promise.reject()));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} onSetMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}